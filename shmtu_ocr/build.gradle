plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

//def jdkVersion = JavaVersion.VERSION_21
def jdkVersion = rootProject.ext.jdkVersion

switch (jdkVersion) {
    case JavaVersion.VERSION_21:
        println("Using JDK 21 (Recommended ^_^)")
        break
    case JavaVersion.VERSION_17:
        println("Using JDK 17 (Recommended to use JDK 21 instead)")
        break
    case JavaVersion.VERSION_11:
        println("Using JDK 11 (Recommended to use JDK 21 instead)")
        break
    default:
        println("Unknown JDK version: $jdkVersion")
        break
}

android {
    namespace 'com.khm.shmtu.cas.ocr'
    compileSdk 36

    defaultConfig {
        minSdk 21
        targetSdk 36

        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags ''
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
//            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility jdkVersion
        targetCompatibility jdkVersion
    }

    kotlin{
        compileOptions{
            sourceCompatibility jdkVersion
            targetCompatibility jdkVersion
        }
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '4.0.2'
        }
    }
    ndkVersion '29.0.13599879'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
}
